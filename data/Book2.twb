<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='result_df' inline='true' name='federated.1n9jkzd1iqy6ga13wr46u1fqxkny' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='result_df' name='textscan.0k4fv8b0z7ivjn1agzuof0r3v6rd'>
            <connection class='textscan' directory='C:/Users/DK/Desktop/data science/Capstone/data' filename='result_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0k4fv8b0z7ivjn1agzuof0r3v6rd' name='result_df.csv' table='[result_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='train_o' ordinal='1' />
            <column datatype='real' name='test_o' ordinal='2' />
            <column datatype='real' name='train_up' ordinal='3' />
            <column datatype='real' name='test_up' ordinal='4' />
            <column datatype='real' name='precision_o' ordinal='5' />
            <column datatype='real' name='recall_o' ordinal='6' />
            <column datatype='real' name='precision_up' ordinal='7' />
            <column datatype='real' name='recall_up' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0k4fv8b0z7ivjn1agzuof0r3v6rd' name='result_df.csv' table='[result_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='train_o' ordinal='1' />
            <column datatype='real' name='test_o' ordinal='2' />
            <column datatype='real' name='train_up' ordinal='3' />
            <column datatype='real' name='test_up' ordinal='4' />
            <column datatype='real' name='precision_o' ordinal='5' />
            <column datatype='real' name='recall_o' ordinal='6' />
            <column datatype='real' name='precision_up' ordinal='7' />
            <column datatype='real' name='recall_up' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>train_o</remote-name>
            <remote-type>5</remote-type>
            <local-name>[train_o]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>train_o</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>test_o</remote-name>
            <remote-type>5</remote-type>
            <local-name>[test_o]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>test_o</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>train_up</remote-name>
            <remote-type>5</remote-type>
            <local-name>[train_up]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>train_up</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>test_up</remote-name>
            <remote-type>5</remote-type>
            <local-name>[test_up]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>test_up</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precision_o</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precision_o]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>precision_o</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recall_o</remote-name>
            <remote-type>5</remote-type>
            <local-name>[recall_o]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>recall_o</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precision_up</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precision_up]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>precision_up</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recall_up</remote-name>
            <remote-type>5</remote-type>
            <local-name>[recall_up]</local-name>
            <parent-name>[result_df.csv]</parent-name>
            <remote-alias>recall_up</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='result_df.csv' datatype='table' name='[__tableau_internal_object_id__].[result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36]' role='measure' type='quantitative' />
      <column caption='Precision O' datatype='real' name='[precision_o]' role='measure' type='quantitative' />
      <column caption='Precision Up' datatype='real' name='[precision_up]' role='measure' type='quantitative' />
      <column caption='Recall O' datatype='real' name='[recall_o]' role='measure' type='quantitative' />
      <column caption='Recall Up' datatype='real' name='[recall_up]' role='measure' type='quantitative' />
      <column caption='Test O' datatype='real' name='[test_o]' role='measure' type='quantitative' />
      <column caption='Test Up' datatype='real' name='[test_up]' role='measure' type='quantitative' />
      <column caption='Train O' datatype='real' name='[train_o]' role='measure' type='quantitative' />
      <column caption='Train Up' datatype='real' name='[train_up]' role='measure' type='quantitative' />
      <column-instance column='[precision_o]' derivation='Sum' name='[sum:precision_o:qk]' pivot='key' type='quantitative' />
      <column-instance column='[precision_up]' derivation='Sum' name='[sum:precision_up:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recall_o]' derivation='Sum' name='[sum:recall_o:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recall_up]' derivation='Sum' name='[sum:recall_up:qk]' pivot='key' type='quantitative' />
      <column-instance column='[test_o]' derivation='Sum' name='[sum:test_o:qk]' pivot='key' type='quantitative' />
      <column-instance column='[test_up]' derivation='Sum' name='[sum:test_up:qk]' pivot='key' type='quantitative' />
      <column-instance column='[train_o]' derivation='Sum' name='[sum:train_o:qk]' pivot='key' type='quantitative' />
      <column-instance column='[train_up]' derivation='Sum' name='[sum:train_up:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:precision_o:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:test_o:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:recall_up:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:train_o:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:recall_o:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:test_up:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:precision_up:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:train_up:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result_df.csv' id='result_df.csv_427E4E0FDCE9492AA0B228E6B361EF36'>
            <properties context=''>
              <relation connection='textscan.0k4fv8b0z7ivjn1agzuof0r3v6rd' name='result_df.csv' table='[result_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='train_o' ordinal='1' />
                  <column datatype='real' name='test_o' ordinal='2' />
                  <column datatype='real' name='train_up' ordinal='3' />
                  <column datatype='real' name='test_up' ordinal='4' />
                  <column datatype='real' name='precision_o' ordinal='5' />
                  <column datatype='real' name='recall_o' ordinal='6' />
                  <column datatype='real' name='precision_up' ordinal='7' />
                  <column datatype='real' name='recall_up' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='result_df' name='federated.1n9jkzd1iqy6ga13wr46u1fqxkny' />
          </datasources>
          <datasource-dependencies datasource='federated.1n9jkzd1iqy6ga13wr46u1fqxkny'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column caption='Precision O' datatype='real' name='[precision_o]' role='measure' type='quantitative' />
            <column caption='Precision Up' datatype='real' name='[precision_up]' role='measure' type='quantitative' />
            <column-instance column='[precision_o]' derivation='Sum' name='[sum:precision_o:qk]' pivot='key' type='quantitative' />
            <column-instance column='[precision_up]' derivation='Sum' name='[sum:precision_up:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:precision_o:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:precision_up:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;LR&quot;</bucket>
              <bucket>&quot;KNN&quot;</bucket>
              <bucket>&quot;RF&quot;</bucket>
              <bucket>&quot;SVM&quot;</bucket>
              <bucket>&quot;XGB&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]' scope='cols' value='%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk] / [federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names])</rows>
        <cols>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{815D7A6F-E773-440A-B35F-76A3D60C1FE7}' />
    </worksheet>
    <worksheet name='recall'>
      <table>
        <view>
          <datasources>
            <datasource caption='result_df' name='federated.1n9jkzd1iqy6ga13wr46u1fqxkny' />
          </datasources>
          <datasource-dependencies datasource='federated.1n9jkzd1iqy6ga13wr46u1fqxkny'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column caption='Recall O' datatype='real' name='[recall_o]' role='measure' type='quantitative' />
            <column caption='Recall Up' datatype='real' name='[recall_up]' role='measure' type='quantitative' />
            <column-instance column='[recall_o]' derivation='Sum' name='[sum:recall_o:qk]' pivot='key' type='quantitative' />
            <column-instance column='[recall_up]' derivation='Sum' name='[sum:recall_up:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:recall_o:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:recall_up:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;LR&quot;</bucket>
              <bucket>&quot;KNN&quot;</bucket>
              <bucket>&quot;RF&quot;</bucket>
              <bucket>&quot;SVM&quot;</bucket>
              <bucket>&quot;XGB&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]' scope='cols' value='%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk] / [federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names])</rows>
        <cols>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{B5B30E5A-F237-4DCB-9755-40AEF9863465}' />
    </worksheet>
    <worksheet name='test_acc'>
      <table>
        <view>
          <datasources>
            <datasource caption='result_df' name='federated.1n9jkzd1iqy6ga13wr46u1fqxkny' />
          </datasources>
          <datasource-dependencies datasource='federated.1n9jkzd1iqy6ga13wr46u1fqxkny'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[train_o]' derivation='Sum' name='[sum:train_o:qk]' pivot='key' type='quantitative' />
            <column-instance column='[train_up]' derivation='Sum' name='[sum:train_up:qk]' pivot='key' type='quantitative' />
            <column caption='Train O' datatype='real' name='[train_o]' role='measure' type='quantitative' />
            <column caption='Train Up' datatype='real' name='[train_up]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:train_o:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[sum:train_up:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;LR&quot;</bucket>
              <bucket>&quot;KNN&quot;</bucket>
              <bucket>&quot;RF&quot;</bucket>
              <bucket>&quot;SVM&quot;</bucket>
              <bucket>&quot;XGB&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk] / [federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names])</rows>
        <cols>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{6E8FD89E-1C57-4410-B355-78A6AE2643C3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1000' maxwidth='1200' minheight='1000' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98400' id='7' param='horz' w='98666' x='667' y='800'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98400' id='5' w='98666' x='667' y='800'>
              <zone h='32500' id='3' name='precision' w='98666' x='667' y='33000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32200' id='9' name='recall' w='98666' x='667' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33700' id='10' name='test_acc' w='98666' x='667' y='65500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='12' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98400' id='11' param='vert' w='98666' x='667' y='800'>
                <zone fixed-size='280' h='32200' id='9' is-fixed='true' name='recall' w='98666' x='667' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32500' id='3' is-fixed='true' name='precision' w='98666' x='667' y='33000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33700' id='10' is-fixed='true' name='test_acc' w='98666' x='667' y='65500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E7D48EFB-F5AD-4F70-A248-028C74BD8433}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='precision'>
          <highlight>
            <color-one-way>
              <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='recall'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='test_acc' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3273B356-E6B8-4115-A1E3-1B2CAC73C564}' />
    </window>
    <window class='worksheet' name='precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</field>
            <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{089B0402-D6B2-4F6A-9C4B-2A8A811E63E4}' />
    </window>
    <window class='worksheet' name='recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</field>
            <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28CA87F6-1A53-4D93-AD3E-ED7FBB76869B}' />
    </window>
    <window class='worksheet' name='test_acc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[:Measure Names]</field>
            <field>[federated.1n9jkzd1iqy6ga13wr46u1fqxkny].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB7493FB-84F7-4673-B76F-B011B0B6A328}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='precision' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='recall' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='test_acc' width='192'>
      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
      FrZtTM6LNpQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
